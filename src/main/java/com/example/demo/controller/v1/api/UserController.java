package com.example.demo.controller.v1.api;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.PathVariable;
import com.example.demo.model.User;
import com.example.demo.controller.v1.request.user.AddUserRequest;

import java.util.Optional;

import javax.validation.Valid;

import com.example.demo.dao.UserRepository;

@RestController // This means that this class is a Controller and add ResponseBody to class methods
@RequestMapping(path = "/user") // This means URL's start with /demo (after Application path)
public class UserController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping() // Map ONLY POST Requests
    public User addNewUser(@Valid @RequestBody AddUserRequest userRequest) {
        // @ResponseBody means the returned String is the response, not a view name

        User user = new User();
        user.setName(userRequest.getName());
        user.setEmail(userRequest.getEmail());
        user.setAge(userRequest.getAge());
        user.setDateOfBirth(userRequest.getDateOfBirth());
        return userRepository.save(user);
    }

    @GetMapping()
    public Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @GetMapping(path = "/{id}")
    public Optional<User> getUser(@PathVariable(name = "id") Integer id) {
        // This returns a JSON or XML with the users
        return userRepository.findById(id);
    }
}